
//data binding
    //reg js
        //populate the form
    $('#fullname').val(person.fullname);
    $('#age').val(person.age);

    //populate object on submit
   $('#person-from').submit(function (e) { 
        person.fullname = $('#fullname').val();
        person.age = $('#age').val();

        e.preventDefault();        
    });

    //knockout
        
    var person = {
        fullname: ko.observable("Arcadiusz"),
        age: ko.observable(19),
    };

    //populate the form
    ko.applyBindings(person);

    //populate object on submit
   $('#person-from').submit(function (e) {        

        e.preventDefault();        
    });

        <input type="text" id="age" class="form-control" data-bind="value: age"/>
        <input type="text" id="fullname" class="form-control" data-bind="value: fullname" />

    
//













$(':enabled').css('border', '3px solid red');
$(':text').css('border', '3px solid red');
setTimeout(function(){
$(':focus').css('border', '3px solid red');
},3000);
$(':input').focus(function(){
$(this).css('border', '3px solid green');
});
$(':input').blur(function(){
$(this).css('border', '3px solid blue');
});

$(':input').change(function(){
$(this).css('border', '3px solid green');
})
$(':text').val(function(index, origVal){
return origVal +' foo';
});

alert($('form').serialize());
var a = $('from').serializeArray();
$.each(a, function(i, field){
console.log(i + ')'+ field.name + ',' + field.value);
});

$('form').submit(function(event){
event.preventDefault();
})

$.validator.addMethod("startsWithA", function(value, element){
return /^A/.test(value);
},'Field must start with A');

$('form').validate({
rules:{
fullname:{
    required:true,
    minlength: 1,
    maxlength: 30,
    startsWithA: true,
},
password:{
    required:true
}
        //prevents submission for ajex calls
submitHandler: function(form) {
alert('ajax being called...')
},
invalidHandler: function(event, validator){
alert('number of invalid fields: '+ validator.numberOfInvalids());
}
}
});

        submitHandler: function (form) {
            //alert('ajax being called...')
        },
        invalidHandler: function (event, validator) {
            //alert('number of invalid fields: ' + validator.numberOfInvalids());
        },